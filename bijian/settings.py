"""
Django settings for bijian project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(*_esq6=25@h-)$nc9+nv)xwykq*5wkc8n)=q(8)ch#y5zca7h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'dwebsocket',
    'userapi',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bijian.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bijian.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'scrapyspider',
        'USER': 'root',
        'PASSWORD': '1558759687',
        'HOST': "localhost",
        'PORT': 3306,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = dict(
    # 用户验证
    DEFAULT_AUTHENTICATION_CLASSES=['unit.auth.Confirm', ],
    # 权限控制
    # DEFAULT_PERMISSION_CLASSES=['unit.permission.VIPPermission', ],
    # 访问控制 对登录用户,匿名用户控制放在试图中局部调用,但DEFAULT_THROTTLE_RATES是通用的
    # DEFAULT_THROTTLE_CLASSES=['unit.throttle.UserThrottle', ],
    # 访问频率设置 匿名 3/m 3次每分钟 登录用户 10/m
    # DEFAULT_THROTTLE_RATES={
    #     "visit": "3/m",
    #     "login": "10/m",
    #
    # },
    # 版本控制

    # 使用URL正则来配置
    DEFAULT_VERSIONING_CLASS='rest_framework.versioning.URLPathVersioning',
    # 默认版本
    DEFAULT_VERSION='v1',
    # 所有包括的版本
    ALLOWED_VERSIONS=['v1,v2,v3'],
    # get传版本时所带的名称
    VERSION_PARAM='version',

    # 配置接受文件的格式
    DEFAULT_PARSER_CLASSES=['rest_framework.parsers.JSONParser', 'rest_framework.parsers.FormParser'],

    # 配置全局默认每页显示页数
    PAGE_SIZE=2,
    DEFAULT_PAGINATION_CLASS='rest_framework.pagination.PageNumberPagination',
)

# 配置跨域
CORS_ALLOW_CREDENTIALS = True  # 允许携带cookie
# 允许接收所有源的请求 白名单将不再生效
CORS_ORIGIN_ALLOW_ALL = True
# 跨域请求白名单
# CORS_ORIGIN_WHITELIST = [
#     "https://example.com",
#     "https://sub.example.com",
#     "http://localhost:8080",
#     "http://127.0.0.1:9000"
# ]
# 指定哪些方法可以发送跨域请求
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
]
# 指定请求头中允许携带的字段
CORS_ALLOW_HEADERS = [
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
    'token'
]

# socketed
import dwebsocket

# 为所有的URL提供websocket，如果只是单独的视图需要可以不选
MIDDLEWARE_CLASSES = ['dwebsocket.middleware.WebSocketMiddleware']
# 可以允许每一个单独的视图实用websockets
WEBSOCKET_ACCEPT_ALL = True
